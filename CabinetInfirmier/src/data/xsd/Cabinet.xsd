<?xml version ="1.0" encoding =" UTF -8"?>
<schema version="1.0"
        xmlns="http://www.w3.org/2001/XMLSchema"
        xmlns:cab="http://www.univ-grenoble-alpes.fr/l3miage/medical"
        targetNamespace="http://www.univ-grenoble-alpes.fr/l3miage/medical"
        elementFormDefault="qualified">
    
    <element name="cabinet" type="cab:Cabinet"/>
    
    <!-- Type complexe représentant le cabinet -->
    <complexType name="Cabinet">
        <sequence>
            <element name="nom" type="string"/>
            <element name="adresse" type="cab:Adresse"/>
            <element name="infirmiers" type="cab:Infirmiers"/>
            <element name="patients" type="cab:Patients"/>
        </sequence>
    </complexType>

    <!-- Type complexe représentant l'adresse -->
    <complexType name="Adresse">
        <sequence>
            <element name="etage" type="int" minOccurs="0"/>
            <element name="numero" type="int" minOccurs="0"/>
            <element name="rue" type="string"/>
            <element name="codePostal" type="cab:CodePostal"/>
            <element name="ville" type="string"/>
        </sequence>
    </complexType>

    <!-- Type complexe représentant la liste d'infirmier -->
    <complexType name="Infirmiers">
        <sequence>
            <element name="infirmier" type="cab:Infirmier" minOccurs="0" maxOccurs="unbounded">
                <key name="idInfirmierKey">
                    <selector xpath="cab:Infirmier"/>
                    <field xpath="@id"/>
                </key>
            </element>
        </sequence>
    </complexType>

    <!-- Type complexe représentant un infirmier -->
    <complexType name="Infirmier">
        <sequence>
            <element name="nom" type="cab:NomComplet"/>
            <element name="prenom" type="cab:NomComplet"/>
            <element name="photo" type="cab:PhotoChemin"/>
        </sequence>
        <attribute name="id" type="cab:IdIntervenant" use="required"/>
    </complexType>

    <!-- Type complexe représentant la liste de patient -->
    <complexType name="Patients">
        <sequence>
            <element name="patient" type="cab:Patient" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
    </complexType>

    <!-- Type complexe représentant un patient -->
    <complexType name="Patient">
        <sequence>
            <element name="nom" type="cab:NomComplet"/>
            <element name="prenom" type="cab:NomComplet"/>
            <element name="sexe" type="cab:Sexe"/> 
            <element name="naissance" type="cab:Naissance"/>
            <element name="numero" type="cab:Numero"/>
            <element name="adresse" type="cab:Adresse"/>
            <element name="visite" type="cab:Visite"/>
        </sequence>
    </complexType>

    <!-- Type complexe représentant une visite -->
    <complexType name="Visite">
        <sequence>
            <element name="acte" type="cab:Acte">
                <keyref name="acteId" refer="acteIdUnicite">
                    <selector xpath="cab:acte"/>
                    <field xpath="id"/>
                </keyref>
            </element>
        </sequence>
        <attribute name="date" type="date"/>
        <attribute name="intervenant" type="cab:IdIntervenant"/>   
    </complexType>

    <!-- Type complexe représentant un acte -->
    <complexType name="Acte">
        <attribute name="id" type="string"/>
    </complexType>
    
    <!-- Type complexe représentant un code postal -->
    <simpleType name="CodePostal">
        <restriction base="string">
            <pattern value="(([0-8][0-9])|(9[0-5])|(2[ab]))[0-9]{3}"/>
        </restriction>
    </simpleType>

    <!-- Type simple représentant le sexe avec un enum -->
    <simpleType name="Sexe">
        <restriction base="string">
            <enumeration value="F"/>
            <enumeration value="M"/>
        </restriction>
    </simpleType>

    <!-- Type simple représentant la date de naissance -->
    <simpleType name="Naissance">
        <restriction base="date">
            <minInclusive value="1900-01-01"/>
        </restriction>
    </simpleType>

    <!-- Type simple représentant le numéro de sécurité social -->
    <simpleType name="Numero">
        <restriction base="string">
            <pattern value="(?:[1-4]|7|8)\d{2}(?:0[1-9]|1[1-2]|[2-3]\d|4[0-2]|[5-9]\d)(?:0[1-9]|[1-8]\d|9[1-5]|2A|2B|96)(?:00[1-9]|0[1-9]\d|[1-9]\d{2})|(?:97[0-9]|98[1-9])(?:0[0-9]|[1-9]\d)|99(?:00[1-9]|0[1-9]\d|[1-9]\d{2})"/>
        </restriction>
    </simpleType>

    <!-- Type simple représentant un élément du nom complet (prénom nom) -->
    <simpleType name="NomComplet">
        <restriction base="string">
            <pattern value="[A-Z]?[a-zéèàêâùïüë]+"/>
        </restriction>
    </simpleType>

    <!-- Type complexe représentant l'id de l'intervenant (Infirmier) -->
    <simpleType name="IdIntervenant">
        <restriction base="string">
            <pattern value="\d{3}"/>
        </restriction>
    </simpleType>
    
    <!-- Type simple représentant le chemin d'une photo-->
    <simpleType name="PhotoChemin">
        <restriction base="string">
            <!-- Le ".+" représente n'importe quel caractère, et le "\." représente le point d'extention-->
            <pattern value=".+\.(png|jpg)"/>
        </restriction>
    </simpleType>
    
</schema>